(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{504:function(s,t,n){s.exports=n.p+"assets/img/conversation_session.de0de411.png"},505:function(s,t,n){s.exports=n.p+"assets/img/conversation_token.5b68fb30.png"},980:function(s,t,n){"use strict";n.r(t);var e=n(28),_=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"spring-security-oauth2-0-认证授权"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-security-oauth2-0-认证授权"}},[s._v("#")]),s._v(" Spring Security OAuth2.0 认证授权")]),s._v(" "),e("h2",{attrs:{id:"_1-基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本概念"}},[s._v("#")]),s._v(" 1. 基本概念")]),s._v(" "),e("h3",{attrs:{id:"_1-1-什么是认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是认证"}},[s._v("#")]),s._v(" 1.1.什么是认证")]),s._v(" "),e("p",[s._v("进入移动互联网时代，大家每天都在刷手机，常用的软件有微信、支付宝、头条等，下边拿微信来举例子说明认证\n相关的基本概念，在初次使用微信前需要注册成为微信用户，然后输入账号和密码即可登录微信，输入账号和密码\n登录微信的过程就是认证。")]),s._v(" "),e("p",[s._v("系统为什么要认证？\n认证是为了保护系统的隐私数据与资源，用户的身份合法方可访问该系统的资源。")]),s._v(" "),e("p",[s._v("**认证 ：**用户认证就是判断一个用户的身份是否合法的过程，用户去访问系统资源时系统要求验证用户的身份信\n息，身份合法方可继续访问，不合法则拒绝访问。常见的用户身份认证方式有：用户名密码登录，二维码登录，手\n机短信登录，指纹认证等方式。")]),s._v(" "),e("h3",{attrs:{id:"_1-2-什么是会话"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-什么是会话"}},[s._v("#")]),s._v(" 1.2 什么是会话")]),s._v(" "),e("p",[s._v("用户认证通过后，为了避免用户的每次操作都进行认证可将用户的信息保证在会话中。会话就是系统为了保持当前\n用户的登录状态所提供的机制，常见的有基于session方式、基于token方式等。")]),s._v(" "),e("p",[s._v("基于session的认证方式如下图：")]),s._v(" "),e("p",[s._v("它的交互流程是，用户认证成功后，在服务端生成用户相关的数据保存在session(当前会话)中，发给客户端的\nsesssion_id 存放到 cookie 中，这样用户客户端请求时带上 session_id 就可以验证服务器端是否存在 session 数\n据，以此完成用户的合法校验，当用户退出系统或session过期销毁时,客户端的session_id也就无效了。")]),s._v(" "),e("p",[e("img",{attrs:{src:n(504),alt:"image"}})]),s._v(" "),e("p",[s._v("基于token方式如下图：\n它的交互流程是，用户认证成功后，服务端生成一个token发给客户端，客户端可以放到 cookie 或 localStorage\n等存储中，每次请求时带上 token，服务端收到token通过验证后即可确认用户身份。")]),s._v(" "),e("p",[e("img",{attrs:{src:n(505),alt:"image"}})]),s._v(" "),e("p",[s._v("基于session的认证方式由Servlet规范定制，服务端要存储session信息需要占用内存资源，客户端需要支持\ncookie；基于token的方式则一般不需要服务端存储token，并且不限制客户端的存储方式。如今移动互联网时代\n更多类型的客户端需要接入系统，系统多是采用前后端分离的架构进行实现，所以基于token的方式更适合。")]),s._v(" "),e("h3",{attrs:{id:"_1-3-什么是授权"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-什么是授权"}},[s._v("#")]),s._v(" 1.3 什么是授权")]),s._v(" "),e("p",[s._v("还拿微信来举例子，微信登录成功后用户即可使用微信的功能，比如，发红包、发朋友圈、添加好友等，没有绑定\n银行卡的用户是无法发送红包的，绑定银行卡的用户才可以发红包，发红包功能、发朋友圈功能都是微信的资源即\n功能资源，用户拥有发红包功能的权限才可以正常使用发送红包功能，拥有发朋友圈功能的权限才可以使用发朋友\n圈功能，这个根据用户的权限来控制用户使用资源的过程就是授权。")]),s._v(" "),e("p",[s._v("为什么要授权？")]),s._v(" "),e("p",[s._v("认证是为了保证用户身份的合法性，授权则是为了更细粒度的对隐私数据进行划分，授权是在认证通过后发生的，\n控制不同的用户能够访问不同的资源。")]),s._v(" "),e("p",[s._v("**授权： **授权是用户认证通过根据用户的权限来控制用户访问资源的过程，拥有资源的访问权限则正常访问，没有\n权限则拒绝访问。")]),s._v(" "),e("h3",{attrs:{id:"_1-4-授权的数据模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-授权的数据模型"}},[s._v("#")]),s._v(" 1.4 授权的数据模型")]),s._v(" "),e("p",[s._v("如何进行授权即如何对用户访问资源进行控制，首先需要学习授权相关的数据模型。")]),s._v(" "),e("p",[s._v("授权可简单理解为Who对What(which)进行How操作，包括如下：")]),s._v(" "),e("p",[s._v("Who，即主体（Subject），主体一般是指用户，也可以是程序，需要访问系统中的资源。 What，即资源\n（Resource），如系统菜单、页面、按钮、代码方法、系统商品信息、系统订单信息等。系统菜单、页面、按\n钮、代码方法都属于系统功能资源，对于web系统每个功能资源通常对应一个URL；系统商品信息、系统订单信息\n都属于实体资源（数据资源），实体资源由资源类型和资源实例组成，比如商品信息为资源类型，商品编号 为001\n的商品为资源实例。 How，权限/许可（Permission），规定了用户对资源的操作许可，权限离开资源没有意义，\n如用户查询权限、用户添加权限、某个代码方法的调用权限、编号为001的用户的修改权限等，通过权限可知用户\n对哪些资源都有哪些操作许可。")]),s._v(" "),e("p",[s._v("主体、资源、权限关系如下图：")])])}),[],!1,null,null,null);t.default=_.exports}}]);