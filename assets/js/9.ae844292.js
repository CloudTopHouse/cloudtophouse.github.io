(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{361:function(s,a,t){s.exports=t.p+"assets/img/16c21d25be43b3c5.ca8043b9.png"},362:function(s,a,t){s.exports=t.p+"assets/img/16c21b8d271d0f28.webp.15b0059f.jpg"},363:function(s,a,t){s.exports=t.p+"assets/img/16c21b974dc8e9e1.webp.8b3b688f.jpg"},364:function(s,a,t){s.exports=t.p+"assets/img/16c21b9a6d6e8647.webp.a4a08155.jpg"},365:function(s,a,t){s.exports=t.p+"assets/img/16c21bec83016de4.webp.0aef311b.jpg"},366:function(s,a,t){s.exports=t.p+"assets/img/16c21c45884d7a3c.webp.fb31616a.jpg"},367:function(s,a,t){s.exports=t.p+"assets/img/16c21c46766b002b.webp.f1ea9fb7.jpg"},368:function(s,a,t){s.exports=t.p+"assets/img/16c21c47a6248d54.webp.d38463b9.jpg"},369:function(s,a,t){s.exports=t.p+"assets/img/16c21c4febc37f95.webp.cb128271.jpg"},370:function(s,a,t){s.exports=t.p+"assets/img/16c21c57e7da0415.webp.3e8ef8d4.jpg"},371:function(s,a,t){s.exports=t.p+"assets/img/16c21c5e6628b84f.webp.1c25cf02.jpg"},372:function(s,a,t){s.exports=t.p+"assets/img/16c21c6680795c3f.webp.34e508e2.jpg"},373:function(s,a,t){s.exports=t.p+"assets/img/16c21c6cab32d319.webp.38de9224.jpg"},374:function(s,a,t){s.exports=t.p+"assets/img/16c21c71db830970.webp.71c3b256.jpg"},375:function(s,a,t){s.exports=t.p+"assets/img/16c21c78041c4a18.webp.1ab63d8a.jpg"},376:function(s,a,t){s.exports=t.p+"assets/img/16c21c7d6e9aae2a.webp.f3659ac4.jpg"},377:function(s,a,t){s.exports=t.p+"assets/img/16c21c8339a0f341.webp.a32fdfe6.jpg"},378:function(s,a,t){s.exports=t.p+"assets/img/16c21c8475a3eaf7.webp.de7fc861.jpg"},379:function(s,a,t){s.exports=t.p+"assets/img/16c21c8c9dc2c860.webp.046a9593.jpg"},380:function(s,a,t){s.exports=t.p+"assets/img/16c21cb94fd4527d.webp.578f1a66.jpg"},979:function(s,a,t){"use strict";t.r(a);var n=t(43),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"docker-gitlab-jenkins-搭建-ci-cd-系统"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-gitlab-jenkins-搭建-ci-cd-系统"}},[s._v("#")]),s._v(" docker + gitlab + jenkins 搭建 CI/CD 系统")]),s._v(" "),n("p",[n("img",{attrs:{src:t(361),alt:"img"}})]),s._v(" "),n("h2",{attrs:{id:"_1-环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-环境"}},[s._v("#")]),s._v(" 1. 环境")]),s._v(" "),n("p",[s._v("搭建环境是 Centos 7.2，本地测试是自己搭建的虚拟机，测试环境是阿里云ECS的Centos 7.2。")]),s._v(" "),n("h2",{attrs:{id:"_2-安装docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装docker"}},[s._v("#")]),s._v(" 2. 安装docker")]),s._v(" "),n("p",[s._v("yum默认带有的docker版本比较低，我一般都是会安装更新版本的docker")]),s._v(" "),n("h4",{attrs:{id:"如果已经使用yum安装了docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如果已经使用yum安装了docker"}},[s._v("#")]),s._v(" 如果已经使用yum安装了docker")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove docker /\n                docker-client "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-client-latest "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-common "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-latest "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-latest-logrotate "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-logrotate "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-selinux "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-engine-selinux "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-engine\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h4",{attrs:{id:"安装docker依赖库、添加docker官方yum源及安装docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装docker依赖库、添加docker官方yum源及安装docker"}},[s._v("#")]),s._v(" 安装docker依赖库、添加docker官方yum源及安装docker")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils device-mapper-persistent-data lvm2\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y docker-ce\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h4",{attrs:{id:"配置docker开机自启动并启动docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置docker开机自启动并启动docker"}},[s._v("#")]),s._v(" 配置docker开机自启动并启动docker")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("systemctl "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker\nsystemctl daemon-reload\nsystemctl start docker\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h4",{attrs:{id:"安装完毕可以查询安装的docker版本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装完毕可以查询安装的docker版本"}},[s._v("#")]),s._v(" 安装完毕可以查询安装的docker版本")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("docker --version\nDocker version "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18.09")]),s._v(".6, build 481bc77156\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"安装完docker需要安装-docker-compose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装完docker需要安装-docker-compose"}},[s._v("#")]),s._v(" 安装完docker需要安装 docker-compose")]),s._v(" "),n("p",[s._v("docker-compose是一个python编写的docker编排工具，后面的启动服务都是以docker-compose来启动，这样就不需要每次都手动输入docker启动命令的各项配置参数，简化操作，最后也可以把gitlab，jenkins等关联的服务编写在同一个 docker-compose 脚本中，方便一起管理。")]),s._v(" "),n("p",[s._v("我们部署环境有python3环境，所以直接使用pip3安装docker-compose")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" pip3 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-compose\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("如果没有python环境，则可以使用二进制包来进行安装。从 "),n("a",{attrs:{href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方 GitHub Release"),n("OutboundLink")],1),s._v(" 处直接下载编译好的二进制文件即可。")]),s._v(" "),n("p",[s._v("例如，在 Linux 64 位系统上直接下载对应的二进制包。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-"),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("-"),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" -o /usr/local/bin/docker-compose\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"_3-安装gitlab"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-安装gitlab"}},[s._v("#")]),s._v(" 3. 安装gitlab")]),s._v(" "),n("h4",{attrs:{id:"build-gitlab镜像并启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#build-gitlab镜像并启动"}},[s._v("#")]),s._v(" build gitlab镜像并启动")]),s._v(" "),n("p",[s._v("首先在工作目录下，创建一个docker-compose的脚本，")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /data/gitlab 是自定义映射gitlab存放配置参数及数据的目录，可以修改成自己需要的目录")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" docker-compose.yml "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\nversion: \'2\'\nservices:\n  jenkins:\n    image: gitlab/gitlab-ce:12.0.3-ce.0\n    container_name: gitlab\n    ports:\n      - "9022:9022"\n      - "9080:80"\n    volumes:\n      - "/data/gitlab/cfg:/etc/gitlab"\n      - "/data/gitlab/logs:/var/log/gitlab"\n      - "/data/gitlab/data:/var/opt/gitlab"\n    restart: always\nEOF')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后台启动服务，第一次或自动pull镜像，添加 -d 表示后台启动")]),s._v("\ndocker-compose up -d\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h4",{attrs:{id:"配置gitlab"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置gitlab"}},[s._v("#")]),s._v(" 配置gitlab")]),s._v(" "),n("p",[s._v("gitlab会监听22端口(ssh连接)，80端口(http)及443端口(https)，我们gitlab前面加上一个haproxy做反向代理，haproxy监听443端口代理到9443端口，docker不开80端口全部都走9443端口(映射至433端口)")]),s._v(" "),n("p",[s._v("使用vim编辑gitlab的配置文件，gitlab的配置文件默认为 /data/gitlab/cfg/gitlab.rb ，前面的目录就是docker中配置的映射目录")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("docker container "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it gitlab "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/gitlab/cfg/gitlab.rb\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以下为gitlab的配置项")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置 gitlab 显示 url 的内容，external_url配置为https的链接时，gitlab会自动创建监听443端口的nginx配置，证书需要放置在 /etc/gitlab/ssl 目录下，并且文件名为配置的域名.crt")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如配置域名为 https://git.xxx.com，则需要证书文件为 git.xxx.com.crt 及 git.xxx.com.key")]),s._v("\nexternal_url "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://git.xxx.com'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置邮箱信息")]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gitlab_email_enabled'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gitlab_email_from'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'no-reply@xxx.com'")]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gitlab_email_display_name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gitlab'")]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'smtp_enable'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'smtp_address'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hwsmtp.xxx.com"')]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'smtp_port'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("994")]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'smtp_user_name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-reply@xxx.com"')]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'smtp_password'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'smtp_domain'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"qiye.xxx.com"')]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'smtp_authentication'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"login"')]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'smtp_enable_starttls_auto'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\ngitlab_rails"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'smtp_tls'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置完成后输入一下命令重新配置gitlab")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gitlab-ctl reconfigure\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("h4",{attrs:{id:"使用gitlab"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用gitlab"}},[s._v("#")]),s._v(" 使用gitlab")]),s._v(" "),n("p",[s._v("gitlab正常使用可以参考网上其他的资料，主要是用户，组及项目的创建")]),s._v(" "),n("h2",{attrs:{id:"_4-安装jenkins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-安装jenkins"}},[s._v("#")]),s._v(" 4. 安装jenkins")]),s._v(" "),n("h4",{attrs:{id:"安装jenkins镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装jenkins镜像"}},[s._v("#")]),s._v(" 安装jenkins镜像")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /data/jenkins 是自定义映射jenkins存放数据的目录，可以修改成自己需要的目录，docker的映射是为了让jenkins能使用宿主环境下的docker")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" docker-compose.yml "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\nversion: \'3.1\'\nservices:\n  jenkins:\n    image: jenkins/jenkins:lts\n    user: root\n    container_name: jenkins\n    ports:\n      - "8002:8080"\n    volumes:\n      - "/var/run/docker.sock:/var/run/docker.sock"\n      - "/data/jenkins:/var/jenkins_home"\n      - "/usr/bin/docker:/usr/bin/docker"\n    restart: always\nEOF')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后台启动服务，第一次或自动pull镜像，添加 -d 表示后台启动，可以添加这个参数用于后台启动")]),s._v("\ndocker-compose up -d\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h4",{attrs:{id:"使用jenkins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用jenkins"}},[s._v("#")]),s._v(" 使用jenkins")]),s._v(" "),n("p",[s._v("当 jenkins 正常运行时，启动日志中会有第一次登录需要的管理员密码，如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:t(362),alt:"img"}})]),s._v(" "),n("p",[s._v("拷贝此密码，然后登录 主机地址:8002 来访问，会进入jenkins初始化页面，输入刚才拷贝的密码，然后进入引导页面，根据引导安装推荐的插件")]),s._v(" "),n("p",[n("img",{attrs:{src:t(363),alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:t(364),alt:"img"}})]),s._v(" "),n("p",[s._v("完成插件之后可以添加一个管理员账号，添加完毕后会进入jenkins的主页")]),s._v(" "),n("p",[n("img",{attrs:{src:t(365),alt:"img"}})]),s._v(" "),n("h4",{attrs:{id:"安装-gitlab-及-docker-插件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-gitlab-及-docker-插件"}},[s._v("#")]),s._v(" 安装 gitlab 及 docker 插件")]),s._v(" "),n("p",[s._v("在 系统管理 > 插件管理 > 可选插件中搜索并安装gitlab，docker相关插件")]),s._v(" "),n("p",[n("img",{attrs:{src:t(366),alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:t(367),alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:t(368),alt:"img"}})]),s._v(" "),n("h4",{attrs:{id:"gitlab添加一个可以测试的项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitlab添加一个可以测试的项目"}},[s._v("#")]),s._v(" gitlab添加一个可以测试的项目")]),s._v(" "),n("p",[s._v("需要在gitlab中添加一个测试项目，并且该项目需要有dockerfile脚本，我们测试主要流程是gitlab push tag，然后 jenkins 触发构建开始自动部署，项目部署以docker镜像生成及部署的方式实现")]),s._v(" "),n("p",[n("img",{attrs:{src:t(369),alt:"img"}})]),s._v(" "),n("h4",{attrs:{id:"配置-gitlab-ssh-密钥对"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置-gitlab-ssh-密钥对"}},[s._v("#")]),s._v(" 配置 gitlab ssh 密钥对")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成密钥对, 输入后一路回车，默认保存密钥在 ~/.ssh 目录下, id_rsa(私钥)及id_rsa.pub(公钥)")]),s._v("\nssh-keygen -o -t rsa -b "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v(" -C "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"email@example.com"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("拷贝 公钥信息，在gitlab > 用户设置 > SSH密钥 > 添加一个SSH密钥")]),s._v(" "),n("p",[n("img",{attrs:{src:t(370),alt:"img"}})]),s._v(" "),n("h4",{attrs:{id:"配置docker构建任务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置docker构建任务"}},[s._v("#")]),s._v(" 配置docker构建任务")]),s._v(" "),n("p",[s._v("在jenkins中添加一个任务")]),s._v(" "),n("p",[n("img",{attrs:{src:t(371),alt:"img"}})]),s._v(" "),n("p",[s._v("任务中需要配置源码信息，这里使用gitlab托管代码，所以需要gitlab仓库的地址，用户需要对仓库具有相应的权限，这里因为还没配置gitlab用户信息，所以提示无法读取仓库源码")]),s._v(" "),n("p",[n("img",{attrs:{src:t(372),alt:"img"}})]),s._v(" "),n("p",[s._v("点击 "),n("code",[s._v("Credentials")]),s._v(" 后面的添加按钮可以添加证书信息，类型选择 "),n("code",[s._v("SSH username with private key")]),s._v("，然后添加之前生成密钥的私钥，再点击添加完成录入")]),s._v(" "),n("p",[n("img",{attrs:{src:t(373),alt:"img"}})]),s._v(" "),n("p",[s._v("然后在在源码管理中选择刚刚添加的认证信息，添加没问题则红色的出错信息将会消失")]),s._v(" "),n("p",[n("img",{attrs:{src:t(374),alt:"img"}})]),s._v(" "),n("p",[s._v("在构建中增加一个构建步骤，即将代码构建 docker 镜像")]),s._v(" "),n("p",[n("img",{attrs:{src:t(375),alt:"img"}})]),s._v(" "),n("p",[s._v("完成后点击保存完成任务的添加，然后在首页点击构建按钮查看构建效果，第一次会触发docker 下载相应的未下载的镜像，可能会比较慢，之后可以看到任务构建成功，查看控制台输出可以看到构建时shell的输出日志，至此任务的构建已经没有问题，接下去要实现 gitlab push 自动触发构建")]),s._v(" "),n("p",[n("img",{attrs:{src:t(376),alt:"img"}})]),s._v(" "),n("h4",{attrs:{id:"配置-gitlab-自动触发构建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置-gitlab-自动触发构建"}},[s._v("#")]),s._v(" 配置 gitlab 自动触发构建")]),s._v(" "),n("p",[s._v("在 jenkins 任务的构建触发器中开启 push event 的触发器，然后在高级中点击生成生成一个回调地址的 Secret token，然后保存")]),s._v(" "),n("p",[n("img",{attrs:{src:t(377),alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:t(378),alt:"img"}})]),s._v(" "),n("p",[s._v("在 gitlab 项目 > 设置 > 集成 中将 Jenkins 及 生成的 token配置到gitlab 中，事件选择 tag push")]),s._v(" "),n("p",[n("img",{attrs:{src:t(379),alt:"img"}})]),s._v(" "),n("p",[s._v("然后创建一个标签，jenkins 收到回调会自动构建，在首页能查询构建的历史记录")]),s._v(" "),n("h4",{attrs:{id:"构建完成自动推送镜像至阿里云registry"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构建完成自动推送镜像至阿里云registry"}},[s._v("#")]),s._v(" 构建完成自动推送镜像至阿里云registry")]),s._v(" "),n("p",[s._v("能接受 tag 推送回调之后，需要修改构建的shell脚本")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义变量，CONTAINER_NAME 是项目名称，对应阿里云镜像服务中的仓库名称，GIT_TAG 变量是自动获取本地git版本的tag")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CONTAINER_NAME")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"citest"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GIT_TAG")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" describe --always --tag"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CONTAINER_FULL_NAME")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CONTAINER_NAME}")]),s._v("-"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${GIT_TAG}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REPOSITORY")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("registry.cn-shanghai.aliyuncs.com/ibeelink/"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CONTAINER_NAME}")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${GIT_TAG}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建Docker镜像")]),s._v("\ndocker build -t "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v(" -f Dockerfile "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送Docker镜像，username 跟 password 为 阿里云容器镜像服务的账号密码")]),s._v("\ndocker login --username"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("xxxxx --password"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("xxxxxx registry.cn-shanghai.aliyuncs.com\ndocker push "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$REPOSITORY")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除生成的image")]),s._v("\ndocker images "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" citest "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('":"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("}'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" docker rmi\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除名称或标签为none的镜像")]),s._v("\ndocker rmi -f  "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("docker images "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<none>'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("}'")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("修改至这个版本，可以在gitlab中创建一个tag，然后gitlab会回调至jenkins，然后jenkins开始构建并将生成的镜像推送至阿里云registry中并清理现场")]),s._v(" "),n("p",[n("img",{attrs:{src:t(380),alt:"img"}})]),s._v(" "),n("p",[s._v("目前已经完成了 gitlab ——— jenkins ——— DockerRegistry 的镜像发布，后续会继续实现 jenkins 将发布的镜像分发到每个机器并部署的功能。")]),s._v(" "),n("p",[s._v("作者：yuxiaojie链接：https://juejin.im/post/5d2d2ce86fb9a07ed36edcb8来源：掘金著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")])])}),[],!1,null,null,null);a.default=e.exports}}]);